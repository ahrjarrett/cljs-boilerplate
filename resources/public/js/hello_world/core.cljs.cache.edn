{:rename-macros {}, :renames {}, :externs {parseInt {}, RegExp {}, Object {test {}}, Math {sqrt {}}, console {log {}}}, :use-macros {}, :excludes #{}, :name hello-world.core, :imports nil, :requires {repl clojure.browser.repl, clojure.browser.repl clojure.browser.repl}, :uses nil, :defs {conn {:name hello-world.core/conn, :file "src/hello_world/core.cljs", :line 7, :column 1, :end-line 7, :end-column 14, :meta {:file "/Users/aj/Desktop/stuff/_learn/cljs-boilerplate/src/hello_world/core.cljs", :line 7, :column 10, :end-line 7, :end-column 14}, :tag any}, foo {:protocol-inline nil, :meta {:file "/Users/aj/Desktop/stuff/_learn/cljs-boilerplate/src/hello_world/core.cljs", :line 15, :column 7, :end-line 15, :end-column 10, :arglists (quote ([a b]))}, :name hello-world.core/foo, :variadic false, :file "src/hello_world/core.cljs", :end-column 10, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, re {:name hello-world.core/re, :file "src/hello_world/core.cljs", :line 38, :column 1, :end-line 38, :end-column 8, :meta {:file "/Users/aj/Desktop/stuff/_learn/cljs-boilerplate/src/hello_world/core.cljs", :line 38, :column 6, :end-line 38, :end-column 8}, :tag js}, javascript-object {:name hello-world.core/javascript-object, :file "src/hello_world/core.cljs", :line 48, :column 1, :end-line 48, :end-column 23, :meta {:file "/Users/aj/Desktop/stuff/_learn/cljs-boilerplate/src/hello_world/core.cljs", :line 48, :column 6, :end-line 48, :end-column 23}, :tag object}, new-js-obj {:name hello-world.core/new-js-obj, :file "src/hello_world/core.cljs", :line 66, :column 1, :end-line 66, :end-column 16, :meta {:file "/Users/aj/Desktop/stuff/_learn/cljs-boilerplate/src/hello_world/core.cljs", :line 66, :column 6, :end-line 66, :end-column 16}, :tag object}, newly-minted-clojure-obj {:name hello-world.core/newly-minted-clojure-obj, :file "src/hello_world/core.cljs", :line 74, :column 1, :end-line 74, :end-column 30, :meta {:file "/Users/aj/Desktop/stuff/_learn/cljs-boilerplate/src/hello_world/core.cljs", :line 74, :column 6, :end-line 74, :end-column 30}, :tag any}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:name :code :country}, :order [:code :name :country]}, :doc nil}