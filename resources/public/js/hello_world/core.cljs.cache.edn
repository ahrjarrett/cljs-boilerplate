{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name hello-world.core, :imports nil, :requires {repl clojure.browser.repl, clojure.browser.repl clojure.browser.repl}, :uses nil, :defs {conn {:name hello-world.core/conn, :file "src/hello_world/core.cljs", :line 7, :column 1, :end-line 7, :end-column 14, :meta {:file "/Users/aj/Desktop/stuff/_learn/cljs-boilerplate/src/hello_world/core.cljs", :line 7, :column 10, :end-line 7, :end-column 14}, :tag any}, foo {:protocol-inline nil, :meta {:file "/Users/aj/Desktop/stuff/_learn/cljs-boilerplate/src/hello_world/core.cljs", :line 14, :column 7, :end-line 14, :end-column 10, :arglists (quote ([a b]))}, :name hello-world.core/foo, :variadic false, :file "src/hello_world/core.cljs", :end-column 10, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}}, :require-macros nil, :doc nil}